{"version":3,"sources":["pages/home.js","utils/random.js","api/pokeapi.js","pages/wizard/pokemons.js","common/spinner.js","pages/wizard/wizard.js","utils/utils.js","pages/magicbabies/challenges.js","api/tcgapi.js","pages/magicbabies/magicbabies.js","index.js"],"names":["Home","className","randomInterval","length","number","Math","floor","random","randomFromList","list","randomLetter","ignored","regex","split","join","chars","replace","charAt","urlPokemon","getRandomPokedexNr","getPokemon","pokemon","fetch","then","res","json","getEvolution","chain","evolution","evolves_to","getIdFromChain","splitted","species","url","getPokemonLine","pokeapi","evolution_chain","line","basic","stage1","stage2","getRandomLineWithsprites","response","Promise","all","map","p","data","name","sprite","sprites","front_default","Spinner","type","color","height","width","WizardChallenge","useState","loading","setLoading","pokemonTeam","setPokemonTeam","letters","setLetters","finishedTeam","team","PokemonLine","index","s","onClick","replacePokemonAtIndex","toUpperCase","slice","src","alt","n","promises","i","push","getManyPokemonLines","numberOfLetters","randomLetters","challengesAvailable","configure","apiKey","stadiums","getRandomStadiumText","handleReturn","resolve","card","q","cards","result","rules","includes","MagicBabies","challenges","setChallenges","addChallenge","newChallenges","clearClass","c","HomeTab","to","HeaderTab","title","path","Header","App","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e73189a8.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => {\n    return (\n        <div className='home card'>\n            <h1>Diverse pokemonverkt√∏y</h1>\n            <p>Wizard er for \"wizard challenge\"</p>\n            <p>Magic Babies inneholder en liste av challenges for bruk i Magic Babies eller lignende</p>\n        </div>\n    )\n}\n\nexport default Home;","export const randomInterval = (length) => {\n    const number = Math.floor(Math.random() * (length) * 1.1);\n    if (number >= length) {\n        return randomInterval(length);\n    }\n    return number;\n}\n\nexport const randomFromList = (list) => {\n    return list[randomInterval(list.length)]\n}\n\nconst randomLetter = (ignored = '') => {\n    const regex = '[' + ignored.split('').join(',') + ']';\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.replace(regex, '');\n    return chars.charAt(randomInterval(chars.length));\n}\n\nexport const randomLetters = (numberOfLetters) => {\n    let letters = '';\n    for (let i = 0; i < numberOfLetters; i++) {\n        letters += randomLetter(letters);\n    }\n    return letters;\n}","import * as random from '../utils/random';\n\nconst pokedexMax = 898;\nconst urlPokemon = 'https://pokeapi.co/api/v2/pokemon/';\nconst urlPokemonSpecies = 'https://pokeapi.co/api/v2/pokemon-species/';\nconst urlEvolution = 'https://pokeapi.co/api/v2/evolution-chain/';\n\nexport const getRandomPokedexNr = () => random.randomInterval(pokedexMax);\n\nexport const getPokemon = (pokemon) => {\n    return fetch(urlPokemon + pokemon)\n        .then(res => res.json());\n}\n\nexport const getRandomPokemon = () => {\n    const randomPokemon = getRandomPokedexNr;\n    return fetch(urlPokemon + randomPokemon)\n        .then(res => res.json())\n        .then(data => ({ dex: randomPokemon, name: data.name, image: data.sprites.front_default }));\n};\n\nexport const getRandomPokemonDirectly = () => {\n    const randomPokemon = random.randomInterval(pokedexMax);\n    return fetch(urlPokemon + randomPokemon)\n        .then(res => res.json())\n        .then(data => ({ dex: randomPokemon, name: data.name, image: data.sprites.front_default }));\n}\n\nexport const getPokemonSpecies = (pokemon) => {\n    return fetch(urlPokemonSpecies + pokemon)\n        .then(res => res.json());\n}\n\nexport const getEvolution = (id) => {\n    return fetch(urlEvolution + id)\n        .then(res => res.json());\n}","import * as pokeapi from '../../api/pokeapi';\n\nexport const getPokemon = () => pokeapi.getRandomPokemon();\n\nexport const getManyPokemon = (n) => {\n    let promises = [];\n    for (let i = 0; i < n; i++) {\n        promises.push(pokeapi.getRandomPokemonDirectly());\n    };\n    return Promise.all(promises);\n};\n\nconst getEvolution = (chain) => {\n    const evolution = chain.evolves_to;\n    return evolution.length === 0 ? null : evolution[0];\n};\n\nconst getIdFromChain = (chain) => {\n    const splitted = chain.species.url.split('/');\n    const id = splitted[splitted.length - 2];\n    return id;\n};\n\nexport const getPokemonLine = (pokemon) => {\n    return pokeapi.getPokemonSpecies(pokemon)\n        .then(species => {\n            return fetch(species.evolution_chain.url);\n        })\n        .then(res => res.json())\n        .then(line => {\n            const basic = line.chain;\n            const stage1 = getEvolution(basic);\n            if (!stage1) return [getIdFromChain(basic)];\n\n            const stage2 = getEvolution(stage1);\n            if (!stage2) return [getIdFromChain(basic), getIdFromChain(stage1)];\n\n            return [getIdFromChain(basic), getIdFromChain(stage1), getIdFromChain(stage2)];\n        });\n};\n\nexport const getRandomLineWithspritesOld = () => {\n    return getPokemonLine(pokeapi.getRandomPokedexNr())\n        .then(response => {\n            Promise.all(response.map(p => pokeapi.getPokemon(p)))\n                .then(data => data.map(p => ({ name: p.name, sprite: p.sprites.front_default })));\n        });\n};\n\nexport const getRandomLineWithsprites = () => {\n    return getPokemonLine(pokeapi.getRandomPokedexNr())\n        .then(response =>\n            Promise.all(response.map(p => pokeapi.getPokemon(p)))\n                .then(data => data.map(p => ({ name: p.name, sprite: p.sprites.front_default })))\n        );\n};\n\nexport const getManyPokemonLines = (n) => {\n    let promises = [];\n    for (let i = 0; i < n; i++) {\n        promises.push(getRandomLineWithsprites());\n    };\n    return Promise.all(promises);\n};","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport '../variables.scss';\n\nconst Spinner = () => {\n    return <Loader\n        type=\"BallTriangle\"\n        color=\"#F35B04\"\n        height={100}\n        width={100}\n      />\n    }\n\nexport default Spinner;","import React, { useState } from 'react';\nimport { getRandomLineWithsprites, getManyPokemonLines } from './pokemons';\nimport { randomLetters } from '../../utils/random';\nimport { capitalise } from '../../utils/utils';\nimport './wizard.scss';\nimport Spinner from '../../common/spinner';\n\nconst numberOfPokemon = 6;\nconst numberOfLetters = 3;\n\nconst WizardChallenge = () => {\n\n    const [loading, setLoading] = useState(false);\n    const [pokemonTeam, setPokemonTeam] = useState(null); // [{dex, name, sprite}, {dex, name, sprite}]\n    const [letters, setLetters] = useState('');\n\n    const finishedTeam = (team) => {\n        setPokemonTeam(team);\n        setLoading(false);\n    }\n\n    const generateChallenge = () => {\n        setPokemonTeam(null);\n        setLoading(true);\n\n        getManyPokemonLines(6)\n            .then(finishedTeam);\n        setLetters(randomLetters(numberOfLetters));\n    }\n\n    const replacePokemonAtIndex = (line, index) => {\n        let team = [...pokemonTeam];\n        team[index] = line;\n        setPokemonTeam(team);\n    }\n\n    const PokemonLine = ({basic, stage1, stage2, index}) => {\n        if (!basic) return null;\n        const name = stage2 ? stage2.name : stage1 ? stage1.name : basic.name;\n        return (\n            <div>\n                <div className='pokemon-name p-2' onClick={() => getRandomLineWithsprites().then(line => replacePokemonAtIndex(line, index))}>\n                    {capitalise(name)}\n                    <img src={basic.sprite} alt={basic.name} />\n                    {stage1 && <img src={stage1.sprite} alt={stage1.name} />}\n                    {stage2 && <img src={stage2.sprite} alt={stage2.name} />}\n                </div>\n            </div>);\n    }\n\n    return (\n        <div className='wizard card'>\n            <h1>Wizard Challenge</h1>\n            <p>\n                Regler for wizard challenge...\n            </p>\n            <div className='buttons'>\n                <div className='generate-button btn btn-primary m-1' onClick={generateChallenge}> Generate </div>\n            </div>\n            {letters && !loading && <h2>Letters: {letters}</h2>}\n            {loading && <Spinner />}\n            <div className='column'>\n                {pokemonTeam?.map((line, i) => (\n                    <PokemonLine basic={line[0]} stage1={line[1]} stage2={line[2]} index={i}/>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default WizardChallenge;","export const capitalise = (s) => {\n    if (typeof s !== 'string') return s\n    return s.charAt(0).toUpperCase() + s.slice(1)\n  }","import {randomFromList} from '../../utils/random';\n\nlet challengesRemoved = [];\nlet challengesAvailable = [\"You must play with at least 5 stage 2 evolutions in your deck.\",\n    \"You may draw 1 additional card at the start of the match.\",\n    \"Play with 4 Prize cards.\",\n    \"You may go through your deck and add any evolution to your hand at the start of the game.\",\n    \"You may not use exact duplicates of Pokemon, however, you may use two different levels of the same Pokemon.\",\n    \"You may not use trainer cards.\",\n    \"When you draw a prize card, your opponent may look at all of your prize cards and choose which one you draw.\",\n    \"You may go through your deck and add a trainer card to your hand at the start of the game. Shuffle the deck afterward.\",\n\n    \"You cannot use Colorless Pokemon or special Energy cards.\",\n    \"You need to collect 2 fewer Prizes to win. (The number of prize cards remain the same)\",\n    \"Damage from Pokemon is cut in half, rounded down.\",\n    \"You cannot retreat.\",\n    \"Play with your hand face up.\",\n    \"You may go through your deck and add a Basic pokemon to your hand at the start of the game. Shuffle your deck afterwards.\",\n    \"Basic Pokemon cards cannot attack. Only Evolved Pokemon can attack.\",\n    \"Whenever you draw a Prize, you must immediately discard 1 card from your hand.\",\n\n    \"Your deck may only contain pokemon and energu cards.\",\n    \"Your deck may not contain stage 2 pokemon.\",\n    \"After you draw any number of cards, discard a card from the top of your deck.\",\n    \"Pokemon in your deck may not have more than 80HP.\",\n    \"Your deck may only contain Pokemon of a single energy type.\",\n    \"Your deck may only contain Common and Uncommon cards.\",\n    \"Your Active Pokemon takes 10 damage at the beginning of each of your turns.\",\n\n    \"Once per turn, when you play a basic energy card from your hand, put 1 damage counter on 1 of your opponent's pokemon.\",\n    \"You must discard a card from your hand as an additional cost of playing a Supporter card. (You can't play a supporter if you can't discard a card).\",\n    \"Your deck may not contain more than one of the same Pokemon, by name.\",\n    \"At the end of your turn, put the top card of your deck in your discard pile.\",\n    \"Your Pokemon have 20HP less than printed.\",\n    \"Your Active Pokemon has weakness to the opposing Active Pokemon.\",\n    \"Your Evolved Pokemon's attacks cost additional Energy.\",\n\n    \"Once per game, you may shuffle your discard pile into your deck.\",\n    \"Once per game, you may shuffle your opponent's discard pile into their deck.\",\n    \"You may draw a card every time your opponent plays a Basic Pokemon after set-up.\",\n    \"Once per turn, when an opponent does damage to one of your Pokemon, discard the top card of your deck. (Putting damage counters does not cause this effect.)\",\n    \"When one of your pokemon is knocked out, choose one of your pokemon and remove all damage counters from it.\",\n    \"After each player's turn put one damage counter on one of your Benched Pokemon.\",\n    \"Your Active Pokemon is always Burned.\",\n    \"If an attack would Knock Out one of your opponent's Pokemon, flip a coin. If tails, that Pokemon is not Knocked Out and its remaining HP becomes 10 instead.\",\n\n    \"Damage done to your opponent's Pokemon by your Attacking Pokemon is reduced by 10 damage (before applying Weakness and Resistance).\",\n    \"Each of your Pokemon's attacks gets 'Choose 1 card from your opponent's hand without looking and discard it.'\",\n    \"Each of your Pokemon's attacks gets 'Put 1 damage counter on 1 of your opponent's Pokemon.'\",\n    \"You may draw 2 cards instead of 1 at the beginning of your turn.\",\n    \"Each of your pokemon's attacks gets 'Flip a coin. If tails, this Pokemon does 10 damage to itself.'\",\n    \"Your Pokemon's attack cost (C) more to use.\",\n    \"You cannot have more than 2 Pokemon on your Bench.\",\n    \"Each time 1 of your Pokemon is Knocked Out, discard 3 cards from the top of your deck.\",\n\n    \"You may choose and discard any 1 card from your hand once during your turn before attacking. If you do, your opponent switches his or her Active Pokemon with 1 of his or her Benched Pok√©mon.\",\n    \"You may draw an additional card at the beginning of your turn.\",\n    \"You may flip a coin once during your turn before attacking.If heads, your opponent's Active Pok√©mon is now Paralyzed.\",\n    \"You must discard 3 cards from the top of your deck whenever your opponent's Active Pok√©mon retreats.\",\n    \"You may choose and discard any 1 card from your hand once during your turn before attacking. If you do, flip a coin. If heads, remove 3 damage counters from your Active Pok√©mon.If tails, switch your Active Pok√©mon with one of your Benched Pok√©mon.\",\n\n    \"If you have any Colorless-type Pok√©mon in play, its type is the same as all types of energy attached to it.\",\n    \"You may, once per turn when you attack, discard an Energy attached to your Active Pok√©mon. If you do, the Defending Pok√©mon is now Poisoned.\",\n    \"You may discard two cards from your hand once during your turn (before you attack), in order to look at your opponent's hand. If you do, you may choose a supporter card you find there and use the effect of that card.\",\n    \"When you have an Active Pok√©mon with Lightning Energy attached to it that is damaged by your opponent's attack (even if that Pok√©mon is Knocked Out), the Attacking Pok√©mon is now Paralyzed.\",\n    \"If you have an Active Pok√©mon with Fighting Energy attached to it, you may choose to search your deck for one Pok√©mon Tool card once during your turn (before you attack) and put it in your hand. If you do, you may not attack that turn.\",\n    \"You may, once during your turn (before you attack), discard two Energy cards from your hand in order to return a Pok√©mon (and all cards attached to it) from the Bench to your hand.\",\n    \"Any attack that has the word 'Dragon' in its name does 20 more damage.\",\n    \"If you attach a Water Energy card from your hand to the Active Pok√©mon, remove all Special Conditions from that Pok√©mon.\",\n\n    \"You may draw a card every time you play a Basic Pok√©mon after set-up.\",\n    \"Once per turn (before you attack) you may discard 2 cards from the top of your deck. If you do, your active Pok√©mon's attacks do an additional 20 damage.\",\n    \"The Retreat Cost on any of your Pok√©mon is reduced by 1.\",\n    \"The Retreat Cost on any of your Pok√©mon is increased by 1.\",\n\n    \"The attacks of any [Fighting] Pok√©mon with a Weakness to [Grass] cost [Fighting] less.\",\n    \"Active [Fighting] Pok√©mon with a Weakness to [Psychic] have no Retreat Cost.\",\n    \"Whenever a Lightning Pokemon is damaged by an opponent's attack, flip a coin.If heads, the Attacking Pokemon is paralyzed.\",\n    \"If a Fire Pokemon would be damaged by an opponent's attack, its owner may discard 1 Fire energy from that Pokemon. If he or she does, that attack does 20 less damage (before applying weakness or resistance).\",\n    \"Each colorless Pokemon gets +10HP for each colorless in its Retreat Cost.\",\n    \"Whenever a Pok√©mon with Weakness to Electric and Resistance to Fighting deals damage with an attack, its owner may discard an Energy from it to switch it with one of his or her Benched Pok√©mon.\",\n    \"Once during your turn (before your attack), if you put a Psychic Pok√©mon from your hand onto your bench this turn, you may reveal your hand.If you do, you may discard a random card from your opponent's hand.\",\n    \"If a water Pok√©mon does damage with an attack, its owner may discard any number of water energy from it. For each energy discarded this way, the attack does 20 damage to each of the opponents bench Pok√©mon. Don't apply weakness or resistance for this damage.\",\n\n    \"Double Battle.\",\n    \"Double Battle.\",\n\n    \"Grass pokemon get 30 more HP.\",\n    \"After discarding energies by an attack on fire pokemon, attach one fire energy from the discard pile to that pokemon.\",\n    \"When a water pokemon is knocked out by damage from an attack. Flip a coin, if heads return that pokemon to your hand (discard all cards attached to that pokemon).\",\n    \"Lightning pokemon don't have weakness and don't hit for resistance.\",\n    \"Psychic pokemon has 2 less retreat.\",\n    \"Fighting pokemon's attacks does 20 more damage to the defending pokemon (before applying weakness and resistance).\",\n    \"All damage done to metal pokemon is reduced by 10 (before applying weakness and resistance).\",\n    \"When a dark pokemon is damaged by an attack, place 1 damage counter on the attacking pokemon.\",\n\n    \"Pokemon that has an evolution gets 30 more HP.\",\n    \"Starters can evolve straight away. (Charmander, Turtwig, Wartortle, etc.)\",\n    \"<a https://pkmncards.com/?s=t%3Astadium&display=scan&sort=random> Play with the rules of a random stadium </a>\",\n    \"<a https://pkmncards.com/?s=t%3Astadium&display=scan&sort=random> Play with the rules of a random stadium </a>\",\n    \"<a https://pkmncards.com/?s=t%3Astadium&display=scan&sort=random> Play with the rules of a random stadium </a>\",\n    \"<a https://pkmncards.com/?s=t%3Astadium&display=scan&sort=random> Play with the rules of a random stadium </a>\",\n    \"<a https://pkmncards.com/?s=t%3Astadium&display=scan&sort=random> Play with the rules of a random stadium </a>\",\n\n    \"‚óès get +20HP. ‚òÖs get -20HP.\",\n    \"Metal pokemon cannot be poisoned. Put 2 more damage counters on poisoned pokemon between turns.\",\n    \"You may discard a card from your hand in order to play a second supporter on your turn.\",\n    \"Basic pokemon has no abilities.\",\n    \"When you bench a pokemon with abilities, place 4 damage counters on that pokemon.\",\n    \"If you knock out an ex pokemon, take an extra prize card.\",\n    \"Play with your prize cards face up\",\n    \"Once during your turn, after you flip any coins for an attack, you may ignore all effects of those coin flips and being flipping those coins again. (You may only use effects that lets you flip coins once during your turn.)\",\n\n    \"GX Trainer: Rare Candy\",\n    \"GX Trainer: Lysandre\",\n    \"GX Trainer: Professor Oak's New Theory\",\n    \"GX Trainer: Prof. Juniper\",\n    \"GX Trainer: Ninja Boy\",\n    \"GX Trainer: N\",\n    \"GX Trainer: Wally\",\n    \"GX Trainer: Hex maniac (plus poke-powers and poke-bodies)\",\n    \"GX Trainer: Maxie's/Archie's\"];\n\nexport const getChallenge = () => {\n    return randomFromList(challengesAvailable);\n}\n\nexport const getAllChallenges = () => {\n    return challengesAvailable;\n}\n\nexport const resetChallenges = () => {\n    i = 0;\n    challenges.push.apply(challenges, removed);\n    removed = [];\n}","import pokemon from 'pokemontcgsdk';\nimport {randomFromList} from '../utils/random';\n\npokemon.configure({apiKey: '0c3da295-4ceb-479e-a57a-009f67b646e7'});\n\nlet stadiums = [];\n\nconst getAllStadiums = () => {\n    if (stadiums.length > 0) return Promise.resolve(stadiums);\n    return pokemon.card.all( {q: 'subtypes:Stadium'})\n        .then(cards => stadiums = cards);\n}\n\nexport const getRandomStadiumText = (handleReturn) => {\n    getAllStadiums()\n        .then(result => {\n            const rules = randomFromList(result).rules;\n            if (rules[0].includes('This card stays in play when you play it')) return handleReturn(rules[1]);;\n            return handleReturn(rules[0]);\n        })\n}","import React, { useState } from 'react';\nimport {getChallenge, getAllChallenges} from './challenges';\nimport { getRandomStadiumText } from '../../api/tcgapi';\nimport './magicbabies.scss';\n\nconst MagicBabies = () => {\n    const [challenges, setChallenges] = useState([]);\n\n    const addChallenge = (number) => {\n        let newChallenges = [];\n        for (let i = 0; i < number; i++) {\n            newChallenges.push(getChallenge());\n        }\n        setChallenges([...challenges, ...newChallenges]);\n    }\n    \n    const addAllChallenges = () => {\n        setChallenges(getAllChallenges());\n    }\n    \n    const clearChallenges = () => {\n        setChallenges([]);\n    }\n\n    const addCard = () => {\n        getRandomStadiumText((card) => setChallenges([...challenges, card]));\n    }\n\n    const clearClass = challenges.length === 0 ? 'btn btn-primary m-1 disabled' : 'btn btn-primary m-1';\n\n    return (\n        <div className='magicbabies card'>\n            <h1>Magic babies</h1>\n            <div>\n                <div className='btn btn-primary m-1' onClick={() => addChallenge(1)}> New Challenge </div>\n                <div className='btn btn-primary m-1'  onClick={() => addChallenge(3)}> 3 Challenges </div>\n                <div className='btn btn-primary m-1' onClick={addAllChallenges}> Show All </div>\n            </div>\n            <div>\n                <div className='btn btn-primary m-1' onClick={addCard}> Stadium </div>\n                <div className={clearClass}  onClick={clearChallenges}> Clear </div>\n            </div>\n            <ul>\n                {challenges.map(c => (\n                    <li key={c}>{c}</li>\n                ))}\n            </ul>\n        </div>);\n}\n\nexport default MagicBabies;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from './pages/home';\nimport WizardChallenge from './pages/wizard/wizard';\nimport MagicBabies from './pages/magicbabies/magicbabies';\nimport 'bootstrap';\nimport './index.scss';\n\nconst HomeTab = () =>\n  <Link className='home-tab m-1' to=\"/pkmn/\">\n    <img src='favicon.ico' alt='home' />\n  </Link>\n\nconst HeaderTab = ({ title, path }) =>\n  <Link\n    className='header-tab btn btn-primary m-1'\n    to={\"/pkmn/\" + path}>\n    {title}\n  </Link>;\n\nconst Header = () =>\n  <div className='header'>\n    <HomeTab />\n    <HeaderTab title='Wizard' path='wizard' />\n    <HeaderTab title='Magic Babies' path='magicbabies' />\n  </div>;\n\nconst App = () =>\n  <Router>\n    <div>\n      <Header />\n      <Switch>\n        <Route exact path=\"/pkmn\">\n          <Home />\n        </Route>\n        <Route path=\"/pkmn/wizard\">\n          <WizardChallenge />\n        </Route>\n        <Route path=\"/pkmn/magicbabies\">\n          <MagicBabies />\n        </Route>\n      </Switch>\n    </div>\n  </Router>;\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}