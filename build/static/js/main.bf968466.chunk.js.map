{"version":3,"sources":["pages/home.js","utils/random.js","api/pokeapi.js","pages/wizard/pokemons.js","common/spinner.js","pages/wizard/settings.js","common/button.js","pages/wizard/wizard.js","utils/utils.js","pages/magicbabies/challenges.js","api/tcgapi.js","pages/magicbabies/magicbabies.js","pages/rules/ruletext.js","pages/rules/rules.js","pages/decklists/deckutils.js","pages/decklists/decklist.js","pages/decklists/lists/dp.js","pages/decklists/lists/hgss.js","pages/decklists/lists/bw.js","pages/decklists/lists/xy.js","pages/decklists/decklists.js","index.js"],"names":["Home","className","randomInterval","length","number","Math","floor","random","randomFromList","list","randomLetter","ignored","chars","split","filter","c","includes","join","charAt","urlPokemon","getRandomPokedexNr","getPokemon","pokemon","fetch","then","res","json","getEvolution","chain","evolution","evolves_to","getIdFromChain","splitted","species","url","getPokemonLine","pokeapi","evolution_chain","line","basic","stage1","stage2","getRandomLineWithsprites","response","Promise","all","map","p","data","name","sprite","sprites","front_default","Spinner","type","color","height","width","SettingInput","text","value","handleChange","errorMessage","inputMode","pattern","onChange","e","target","Settings","pokemons","letters","updatePokemons","updateLetters","useState","lettersError","setLettersError","pokemonsError","setPokemonsError","Button","title","onClick","joinedClassname","disabled","WizardChallenge","numberOfPokemon","setNumberOfPokemon","numberOfLetters","setNumberOfLetters","pokemonTeam","setPokemonTeam","setLetters","showSettings","setShowSettings","loading","setLoading","finishedTeam","team","PokemonLine","index","s","replacePokemonAtIndex","toUpperCase","slice","src","alt","n","promises","i","push","getManyPokemonLines","sort","a","b","localeCompare","randomLetters","challengesAvailable","configure","apiKey","stadiums","getRandomStadiumText","handleReturn","resolve","card","q","cards","result","rules","MagicBabies","challenges","setChallenges","addChallenge","newChallenges","RuleText","format","getRuleText","ex","dp","hgss","bw","xy","sm","swsh","setupFirst","flipFirst","flipRule","draw","drawRule","nothing","noSupporter","noRestrictions","trainerRule","fossilAsBasic","fossilAsTrainer","fossilRule","Rules","setFormat","f","formatDeck","deck","getDeckName","getDeckList","shift","trim","string","row","amount","image","Decklist","emptyDecklist","decks","setDecks","decklist","setDecklist","useEffect","deckUtils","Card","Decklists","HomeTab","to","HeaderTab","path","Header","App","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf968466.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => {\n    return (\n        <div className='home card'>\n            <h1>Diverse pokemonverktøy</h1>\n            <p>Wizard er for \"wizard challenge\"</p>\n            <p>Magic Babies inneholder en liste av challenges for bruk i Magic Babies eller lignende</p>\n        </div>\n    )\n}\n\nexport default Home;","export const randomInterval = (length) => {\n    const number = Math.floor(Math.random() * (length) * 1.1);\n    if (number >= length) {\n        return randomInterval(length);\n    }\n    return number;\n}\n\nexport const randomFromList = (list) => {\n    return list[randomInterval(list.length)]\n}\n\nconst randomLetter = (ignored = '') => {\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('')\n        .filter(c => !ignored.includes(c)).join('');\n    if (chars.length === 0) return '.';\n    return chars.charAt(randomInterval(chars.length));\n}\n\nconst sort = (str) => str.split('').sort((a, b) => a.localeCompare(b)).join('');\n\nexport const randomLetters = (numberOfLetters) => {\n    let letters = '';\n    for (let i = 0; i < numberOfLetters; i++) {\n        letters += randomLetter(letters);\n    }\n    return sort(letters);\n}","import * as random from '../utils/random';\n\nconst pokedexMax = 898;\nconst urlPokemon = 'https://pokeapi.co/api/v2/pokemon/';\nconst urlPokemonSpecies = 'https://pokeapi.co/api/v2/pokemon-species/';\nconst urlEvolution = 'https://pokeapi.co/api/v2/evolution-chain/';\n\nexport const getRandomPokedexNr = () => random.randomInterval(pokedexMax);\n\nexport const getPokemon = (pokemon) => {\n    return fetch(urlPokemon + pokemon)\n        .then(res => res.json());\n}\n\nexport const getRandomPokemon = () => {\n    const randomPokemon = getRandomPokedexNr;\n    return fetch(urlPokemon + randomPokemon)\n        .then(res => res.json())\n        .then(data => ({ dex: randomPokemon, name: data.name, image: data.sprites.front_default }));\n};\n\nexport const getRandomPokemonDirectly = () => {\n    const randomPokemon = random.randomInterval(pokedexMax);\n    return fetch(urlPokemon + randomPokemon)\n        .then(res => res.json())\n        .then(data => ({ dex: randomPokemon, name: data.name, image: data.sprites.front_default }));\n}\n\nexport const getPokemonSpecies = (pokemon) => {\n    return fetch(urlPokemonSpecies + pokemon)\n        .then(res => res.json());\n}\n\nexport const getEvolution = (id) => {\n    return fetch(urlEvolution + id)\n        .then(res => res.json());\n}","import * as pokeapi from '../../api/pokeapi';\n\nexport const getPokemon = () => pokeapi.getRandomPokemon();\n\nexport const getManyPokemon = (n) => {\n    let promises = [];\n    for (let i = 0; i < n; i++) {\n        promises.push(pokeapi.getRandomPokemonDirectly());\n    };\n    return Promise.all(promises);\n};\n\nconst getEvolution = (chain) => {\n    const evolution = chain.evolves_to;\n    return evolution.length === 0 ? null : evolution[0];\n};\n\nconst getIdFromChain = (chain) => {\n    const splitted = chain.species.url.split('/');\n    const id = splitted[splitted.length - 2];\n    return id;\n};\n\nexport const getPokemonLine = (pokemon) => {\n    return pokeapi.getPokemonSpecies(pokemon)\n        .then(species => {\n            return fetch(species.evolution_chain.url);\n        })\n        .then(res => res.json())\n        .then(line => {\n            const basic = line.chain;\n            const stage1 = getEvolution(basic);\n            if (!stage1) return [getIdFromChain(basic)];\n\n            const stage2 = getEvolution(stage1);\n            if (!stage2) return [getIdFromChain(basic), getIdFromChain(stage1)];\n\n            return [getIdFromChain(basic), getIdFromChain(stage1), getIdFromChain(stage2)];\n        });\n};\n\nexport const getRandomLineWithspritesOld = () => {\n    return getPokemonLine(pokeapi.getRandomPokedexNr())\n        .then(response => {\n            Promise.all(response.map(p => pokeapi.getPokemon(p)))\n                .then(data => data.map(p => ({ name: p.name, sprite: p.sprites.front_default })));\n        });\n};\n\nexport const getRandomLineWithsprites = () => {\n    return getPokemonLine(pokeapi.getRandomPokedexNr())\n        .then(response =>\n            Promise.all(response.map(p => pokeapi.getPokemon(p)))\n                .then(data => data.map(p => ({ name: p.name, sprite: p.sprites.front_default })))\n        );\n};\n\nexport const getManyPokemonLines = (n) => {\n    let promises = [];\n    for (let i = 0; i < n; i++) {\n        promises.push(getRandomLineWithsprites());\n    };\n    return Promise.all(promises);\n};","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport '../variables.scss';\n\nconst Spinner = () => {\n    return <Loader\n        type=\"BallTriangle\"\n        color=\"#F35B04\"\n        height={100}\n        width={100}\n      />\n    }\n\nexport default Spinner;","import React, { useState } from 'react';\nimport './wizard.scss';\n\nconst ErrorMessage = (message) => {\n    if (!message) return null;\n    return\n}\n\nconst SettingInput = ({ text, value, handleChange, errorMessage }) => (\n    <div className='setting-input'>\n        <div className='input-group m-1'>\n            <div className='input-group-prepend'>\n                <span className='input-group-text'>\n                    {text}\n                </span>\n            </div>\n            <input\n                className='form-control'\n                type='number'\n                inputMode='numeric'\n                pattern='[0-9]*'\n                value={value}\n                onChange={e => handleChange(e.target.value)}\n            />\n        </div>\n        {errorMessage && <div className='error-message'>\n            {errorMessage}\n        </div>}\n    </div>\n);\n\nconst Settings = ({ pokemons, letters, updatePokemons, updateLetters }) => {\n    const [lettersError, setLettersError] = useState(null);\n    const [pokemonsError, setPokemonsError] = useState(null);\n\n    return (\n        <div className='wizard-settings'>\n            <hr />\n            <div className='inputs d-flex'>\n                <SettingInput\n                    text='#pokemon'\n                    value={pokemons}\n                    handleChange={(p) => {\n                        if (p > 10) return setPokemonsError('Kan ikke ha mer enn 10 pokemon');\n                        setPokemonsError(false);\n                        updatePokemons(p);\n                    }}\n                    errorMessage={pokemonsError}\n                />\n                <SettingInput\n                    text='#bokstaver'\n                    value={letters}\n                    handleChange={(p) => {\n                        if (p > 26) return setLettersError('Kan ikke ha mer enn 26 bokstaver');\n                        setLettersError(false);\n                        updateLetters(p);\n                    }}\n                    errorMessage='Kan ikke ha mer enn 26 bokstaver'\n                    errorMessage={lettersError}\n                />\n            </div>\n            <hr />\n        </div>\n    );\n};\n\nexport default Settings;","import React from 'react';\nimport './common.scss';\n\nconst Button = ({ title, onClick, disabled }) => {\n    const joinedClassname = disabled ? 'btn btn-primary m-1 disabled' : 'btn btn-primary m-1';\n    return (\n        <div className={joinedClassname} onClick={onClick}>\n            {title}\n        </div>\n    );\n}\n\nexport default Button;","import React, { useState } from 'react';\nimport { getRandomLineWithsprites, getManyPokemonLines } from './pokemons';\nimport { randomLetters } from '../../utils/random';\nimport { capitalise } from '../../utils/utils';\nimport './wizard.scss';\nimport Spinner from '../../common/spinner';\nimport Settings from './settings';\nimport Button from '../../common/button';\n\nconst WizardChallenge = () => {\n    const [numberOfPokemon, setNumberOfPokemon] = useState(6);\n    const [numberOfLetters, setNumberOfLetters] = useState(3);\n    const [pokemonTeam, setPokemonTeam] = useState(null); // [{dex, name, sprite}, {dex, name, sprite}]\n    const [letters, setLetters] = useState('');\n    const [showSettings, setShowSettings] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const finishedTeam = (team) => {\n        setPokemonTeam(team);\n        setLoading(false);\n    }\n\n    const generateChallenge = () => {\n        setPokemonTeam(null);\n        setLoading(true);\n\n        getManyPokemonLines(numberOfPokemon)\n            .then(finishedTeam);\n        setLetters(randomLetters(numberOfLetters));\n    }\n\n    const replacePokemonAtIndex = (line, index) => {\n        let team = [...pokemonTeam];\n        team[index] = line;\n        setPokemonTeam(team);\n    }\n\n    const PokemonLine = ({ basic, stage1, stage2, index }) => {\n        if (!basic) return null;\n        const name = stage2 ? stage2.name : stage1 ? stage1.name : basic.name;\n        return (\n            <div className='pokemonline'>\n                <div className='pokemonline-name' onClick={() => {\n                    setLoading(true);\n                    getRandomLineWithsprites()\n                        .then(line => {\n                            replacePokemonAtIndex(line, index);\n                            setLoading(false);\n                        })\n                }}>\n                    {capitalise(name)}\n                </div>\n                <img src={basic.sprite} alt={basic.name} />\n                {stage1 && <img src={stage1.sprite} alt={stage1.name} />}\n                {stage2 && <img src={stage2.sprite} alt={stage2.name} />}\n            </div>\n        );\n    };\n\n    return (\n        <div className='wizard card'>\n            <div className='d-flex'>\n                <h1 className='title'>Wizard Challenge</h1>\n                <img className='settings m-1' src='images/gear.png' onClick={() => setShowSettings(!showSettings)} />\n            </div>\n            {showSettings && <Settings pokemons={numberOfPokemon} letters={numberOfLetters} updatePokemons={setNumberOfPokemon} updateLetters={setNumberOfLetters} />}\n            <div className='buttons m-2'>\n                <Button className='generate-button' onClick={generateChallenge} title='Generate' />\n            </div>\n            <hr />\n            {letters && !loading && <h2>{letters}</h2>}\n            {loading && <Spinner />}\n            {pokemonTeam && <div className='column'>\n                {pokemonTeam.map((line, i) => (\n                    <PokemonLine basic={line[0]} stage1={line[1]} stage2={line[2]} index={i} key={'pokemonline-' + i} />\n                ))}\n            </div>}\n        </div>\n    );\n}\n\nexport default WizardChallenge;","export const capitalise = (s) => {\n    if (typeof s !== 'string') return s\n    return s.charAt(0).toUpperCase() + s.slice(1)\n  }","import {randomFromList} from '../../utils/random';\n\nlet challengesRemoved = [];\nlet challengesAvailable = [\"You must play with at least 5 stage 2 evolutions in your deck.\",\n    \"You may draw 1 additional card at the start of the match.\",\n    \"Play with 4 Prize cards.\",\n    \"You may go through your deck and add any evolution to your hand at the start of the game.\",\n    \"You may not use exact duplicates of Pokemon, however, you may use two different levels of the same Pokemon.\",\n    \"You may not use trainer cards.\",\n    \"When you draw a prize card, your opponent may look at all of your prize cards and choose which one you draw.\",\n    \"You may go through your deck and add a trainer card to your hand at the start of the game. Shuffle the deck afterward.\",\n\n    \"You cannot use Colorless Pokemon or special Energy cards.\",\n    \"You need to collect 2 fewer Prizes to win. (The number of prize cards remain the same)\",\n    \"Damage from Pokemon is cut in half, rounded down.\",\n    \"You cannot retreat.\",\n    \"Play with your hand face up.\",\n    \"You may go through your deck and add a Basic pokemon to your hand at the start of the game. Shuffle your deck afterwards.\",\n    \"Basic Pokemon cards cannot attack. Only Evolved Pokemon can attack.\",\n    \"Whenever you draw a Prize, you must immediately discard 1 card from your hand.\",\n\n    \"Your deck may only contain pokemon and energu cards.\",\n    \"Your deck may not contain stage 2 pokemon.\",\n    \"After you draw any number of cards, discard a card from the top of your deck.\",\n    \"Pokemon in your deck may not have more than 80HP.\",\n    \"Your deck may only contain Pokemon of a single energy type.\",\n    \"Your deck may only contain Common and Uncommon cards.\",\n    \"Your Active Pokemon takes 10 damage at the beginning of each of your turns.\",\n\n    \"Once per turn, when you play a basic energy card from your hand, put 1 damage counter on 1 of your opponent's pokemon.\",\n    \"You must discard a card from your hand as an additional cost of playing a Supporter card. (You can't play a supporter if you can't discard a card).\",\n    \"Your deck may not contain more than one of the same Pokemon, by name.\",\n    \"At the end of your turn, put the top card of your deck in your discard pile.\",\n    \"Your Pokemon have 20HP less than printed.\",\n    \"Your Active Pokemon has weakness to the opposing Active Pokemon.\",\n    \"Your Evolved Pokemon's attacks cost additional Energy.\",\n\n    \"Once per game, you may shuffle your discard pile into your deck.\",\n    \"Once per game, you may shuffle your opponent's discard pile into their deck.\",\n    \"You may draw a card every time your opponent plays a Basic Pokemon after set-up.\",\n    \"Once per turn, when an opponent does damage to one of your Pokemon, discard the top card of your deck. (Putting damage counters does not cause this effect.)\",\n    \"When one of your pokemon is knocked out, choose one of your pokemon and remove all damage counters from it.\",\n    \"After each player's turn put one damage counter on one of your Benched Pokemon.\",\n    \"Your Active Pokemon is always Burned.\",\n    \"If an attack would Knock Out one of your opponent's Pokemon, flip a coin. If tails, that Pokemon is not Knocked Out and its remaining HP becomes 10 instead.\",\n\n    \"Damage done to your opponent's Pokemon by your Attacking Pokemon is reduced by 10 damage (before applying Weakness and Resistance).\",\n    \"Each of your Pokemon's attacks gets 'Choose 1 card from your opponent's hand without looking and discard it.'\",\n    \"Each of your Pokemon's attacks gets 'Put 1 damage counter on 1 of your opponent's Pokemon.'\",\n    \"You may draw 2 cards instead of 1 at the beginning of your turn.\",\n    \"Each of your pokemon's attacks gets 'Flip a coin. If tails, this Pokemon does 10 damage to itself.'\",\n    \"Your Pokemon's attack cost (C) more to use.\",\n    \"You cannot have more than 2 Pokemon on your Bench.\",\n    \"Each time 1 of your Pokemon is Knocked Out, discard 3 cards from the top of your deck.\",\n\n    \"You may choose and discard any 1 card from your hand once during your turn before attacking. If you do, your opponent switches his or her Active Pokemon with 1 of his or her Benched Pokémon.\",\n    \"You may draw an additional card at the beginning of your turn.\",\n    \"You may flip a coin once during your turn before attacking.If heads, your opponent's Active Pokémon is now Paralyzed.\",\n    \"You must discard 3 cards from the top of your deck whenever your opponent's Active Pokémon retreats.\",\n    \"You may choose and discard any 1 card from your hand once during your turn before attacking. If you do, flip a coin. If heads, remove 3 damage counters from your Active Pokémon.If tails, switch your Active Pokémon with one of your Benched Pokémon.\",\n\n    \"If you have any Colorless-type Pokémon in play, its type is the same as all types of energy attached to it.\",\n    \"You may, once per turn when you attack, discard an Energy attached to your Active Pokémon. If you do, the Defending Pokémon is now Poisoned.\",\n    \"You may discard two cards from your hand once during your turn (before you attack), in order to look at your opponent's hand. If you do, you may choose a supporter card you find there and use the effect of that card.\",\n    \"When you have an Active Pokémon with Lightning Energy attached to it that is damaged by your opponent's attack (even if that Pokémon is Knocked Out), the Attacking Pokémon is now Paralyzed.\",\n    \"If you have an Active Pokémon with Fighting Energy attached to it, you may choose to search your deck for one Pokémon Tool card once during your turn (before you attack) and put it in your hand. If you do, you may not attack that turn.\",\n    \"You may, once during your turn (before you attack), discard two Energy cards from your hand in order to return a Pokémon (and all cards attached to it) from the Bench to your hand.\",\n    \"Any attack that has the word 'Dragon' in its name does 20 more damage.\",\n    \"If you attach a Water Energy card from your hand to the Active Pokémon, remove all Special Conditions from that Pokémon.\",\n\n    \"You may draw a card every time you play a Basic Pokémon after set-up.\",\n    \"Once per turn (before you attack) you may discard 2 cards from the top of your deck. If you do, your active Pokémon's attacks do an additional 20 damage.\",\n    \"The Retreat Cost on any of your Pokémon is reduced by 1.\",\n    \"The Retreat Cost on any of your Pokémon is increased by 1.\",\n\n    \"The attacks of any [Fighting] Pokémon with a Weakness to [Grass] cost [Fighting] less.\",\n    \"Active [Fighting] Pokémon with a Weakness to [Psychic] have no Retreat Cost.\",\n    \"Whenever a Lightning Pokemon is damaged by an opponent's attack, flip a coin.If heads, the Attacking Pokemon is paralyzed.\",\n    \"If a Fire Pokemon would be damaged by an opponent's attack, its owner may discard 1 Fire energy from that Pokemon. If he or she does, that attack does 20 less damage (before applying weakness or resistance).\",\n    \"Each colorless Pokemon gets +10HP for each colorless in its Retreat Cost.\",\n    \"Whenever a Pokémon with Weakness to Electric and Resistance to Fighting deals damage with an attack, its owner may discard an Energy from it to switch it with one of his or her Benched Pokémon.\",\n    \"Once during your turn (before your attack), if you put a Psychic Pokémon from your hand onto your bench this turn, you may reveal your hand.If you do, you may discard a random card from your opponent's hand.\",\n    \"If a water Pokémon does damage with an attack, its owner may discard any number of water energy from it. For each energy discarded this way, the attack does 20 damage to each of the opponents bench Pokémon. Don't apply weakness or resistance for this damage.\",\n\n    \"Double Battle.\",\n    \"Double Battle.\",\n\n    \"Grass pokemon get 30 more HP.\",\n    \"After discarding energies by an attack on fire pokemon, attach one fire energy from the discard pile to that pokemon.\",\n    \"When a water pokemon is knocked out by damage from an attack. Flip a coin, if heads return that pokemon to your hand (discard all cards attached to that pokemon).\",\n    \"Lightning pokemon don't have weakness and don't hit for resistance.\",\n    \"Psychic pokemon has 2 less retreat.\",\n    \"Fighting pokemon's attacks does 20 more damage to the defending pokemon (before applying weakness and resistance).\",\n    \"All damage done to metal pokemon is reduced by 10 (before applying weakness and resistance).\",\n    \"When a dark pokemon is damaged by an attack, place 1 damage counter on the attacking pokemon.\",\n\n    \"Pokemon that has an evolution gets 30 more HP.\",\n    \"Starters can evolve straight away. (Charmander, Turtwig, Wartortle, etc.)\",\n    \"<a https://pkmncards.com/?s=t%3Astadium&display=scan&sort=random> Play with the rules of a random stadium </a>\",\n    \"<a https://pkmncards.com/?s=t%3Astadium&display=scan&sort=random> Play with the rules of a random stadium </a>\",\n    \"<a https://pkmncards.com/?s=t%3Astadium&display=scan&sort=random> Play with the rules of a random stadium </a>\",\n    \"<a https://pkmncards.com/?s=t%3Astadium&display=scan&sort=random> Play with the rules of a random stadium </a>\",\n    \"<a https://pkmncards.com/?s=t%3Astadium&display=scan&sort=random> Play with the rules of a random stadium </a>\",\n\n    \"●s get +20HP. ★s get -20HP.\",\n    \"Metal pokemon cannot be poisoned. Put 2 more damage counters on poisoned pokemon between turns.\",\n    \"You may discard a card from your hand in order to play a second supporter on your turn.\",\n    \"Basic pokemon has no abilities.\",\n    \"When you bench a pokemon with abilities, place 4 damage counters on that pokemon.\",\n    \"If you knock out an ex pokemon, take an extra prize card.\",\n    \"Play with your prize cards face up\",\n    \"Once during your turn, after you flip any coins for an attack, you may ignore all effects of those coin flips and being flipping those coins again. (You may only use effects that lets you flip coins once during your turn.)\",\n\n    \"GX Trainer: Rare Candy\",\n    \"GX Trainer: Lysandre\",\n    \"GX Trainer: Professor Oak's New Theory\",\n    \"GX Trainer: Prof. Juniper\",\n    \"GX Trainer: Ninja Boy\",\n    \"GX Trainer: N\",\n    \"GX Trainer: Wally\",\n    \"GX Trainer: Hex maniac (plus poke-powers and poke-bodies)\",\n    \"GX Trainer: Maxie's/Archie's\"];\n\nexport const getChallenge = () => {\n    return randomFromList(challengesAvailable);\n}\n\nexport const getAllChallenges = () => {\n    return challengesAvailable;\n}\n\nexport const resetChallenges = () => {\n    i = 0;\n    challenges.push.apply(challenges, removed);\n    removed = [];\n}","import pokemon from 'pokemontcgsdk';\nimport {randomFromList} from '../utils/random';\n\npokemon.configure({apiKey: '0c3da295-4ceb-479e-a57a-009f67b646e7'});\n\nlet stadiums = [];\n\nconst getAllStadiums = () => {\n    if (stadiums.length > 0) return Promise.resolve(stadiums);\n    return pokemon.card.all( {q: 'subtypes:Stadium'})\n        .then(cards => stadiums = cards);\n}\n\nexport const getRandomStadiumText = (handleReturn) => {\n    getAllStadiums()\n        .then(result => {\n            const rules = randomFromList(result).rules;\n            if (rules[0].includes('This card stays in play when you play it')) return handleReturn(rules[1]);;\n            return handleReturn(rules[0]);\n        })\n}","import React, { useState } from 'react';\nimport { getChallenge, getAllChallenges } from './challenges';\nimport { getRandomStadiumText } from '../../api/tcgapi';\nimport './magicbabies.scss';\nimport Button from '../../common/button';\n\nconst MagicBabies = () => {\n    const [challenges, setChallenges] = useState([]);\n\n    const addChallenge = (number) => {\n        let newChallenges = [];\n        for (let i = 0; i < number; i++) {\n            newChallenges.push(getChallenge());\n        }\n        setChallenges([...challenges, ...newChallenges]);\n    }\n\n    const addAllChallenges = () => {\n        setChallenges(getAllChallenges());\n    }\n\n    const clearChallenges = () => {\n        setChallenges([]);\n    }\n\n    const addCard = () => {\n        getRandomStadiumText((card) => setChallenges([...challenges, card]));\n    }\n\n    return (\n        <div className='magicbabies card'>\n            <h1>Magic babies</h1>\n            <div>\n                <Button title='New Challenge' onClick={() => addChallenge(1)} />\n                <Button title='3 Challenges' onClick={() => addChallenge(3)} />\n                <Button title='Show All' onClick={addAllChallenges} />\n            </div>\n            <div>\n                <Button title='Stadium' onClick={addCard} />\n                <Button title='Clear' onClick={clearChallenges} disabled={challenges.length === 0} />\n            </div>\n            <ul>\n                {challenges.map(c => (\n                    <li key={c}>{c}</li>\n                ))}\n            </ul>\n        </div>);\n}\n\nexport default MagicBabies;","import React from 'react';\n\nconst RuleText = ({ format }) => {\n    if (!format) return null;\n\n    if (format === 'WotC') return (\n        <div className='rules card'>\n            <h2>Wizards of the Coast</h2>\n            <ul>\n                <li>The coin flip is performed after choosing your Active and Benched Pokémon. The winner must play first.</li>\n                <li>No restrictions are placed on the player playing first; players draw a card to start their turn, may play as many Trainers as they like, and end their turn by attacking.</li>\n                <li>A mulligan rewards two extra cards to the opponent, not just one. Players must decide to draw 0, 1, or 2 cards immediately following each mulligan.</li>\n                <li>Players may retreat as many times per turn as they like.</li>\n                <li>Confused Pokémon that fail to attack do 20 damage to themselves (instead of placing 3 damage counters). This damage applies Weakness and Resistance.</li>\n                <li>Confused Pokémon must attempt to retreat, first by paying the retreat cost, and then flipping a coin. Heads permits that Pokémon to retreat, but tails leaves the confused Pokémon active, and it may not try to retreat again until next turn.</li>\n                <li>PlusPower adds 10 extra damage after applying Weakness and Resistance, not before. (It also must be attached to your Active Pokémon.)</li>\n                <li>There is no limit to how many Stadium cards may be played in one turn.</li>\n                <li>Stadium cards with the same name may be played to replace another.</li>\n            </ul>\n        </div>\n    );\n\n\n    const getRuleText = ({ ex, dp, hgss, bw, xy, sm, swsh }) => {\n        switch (format) {\n            case 'EX':\n                return ex;\n            case 'DP':\n                return dp;\n            case 'HGSS':\n                return hgss;\n            case 'BW':\n                return bw;\n            case 'XY':\n                return xy;\n            case 'SM':\n                return sm;\n            case 'SWSH':\n                return swsh;\n            default:\n                return 'Missing';\n        }\n    }\n\n    const formatName = () => {\n        return getRuleText({\n            ex: 'EX', dp: 'Diamond & Pearl', hgss: 'HeartGold & SoulSilver', bw: 'Black & White', xy: 'XY', sm: 'Sun & Moon', swsh: 'Sword & Shield'\n        });\n    }\n\n    const flipRule = () => {\n        const setupFirst = 'Set up before flipping a coin to determine who plays first. The winner of the flip will play first';\n        const flipFirst = 'Flip a coin. The winner of the flip chooses who will go first. Then set up';\n        return getRuleText({\n            ex: setupFirst, dp: setupFirst, hgss: setupFirst, bw: setupFirst, xy: flipFirst, sm: flipFirst, swsh: flipFirst\n        });\n    }\n\n    const drawRule = () => {\n        const noDraw = 'Does not draw a card to start their first turn'\n        const draw = 'Draw a card to start their first turn';\n        return getRuleText({\n            ex: noDraw, dp: draw, hgss: draw, bw: draw, xy: draw, sm: draw, swsh: draw\n        });\n    }\n\n    const trainerRule = () => {\n        const nothing = 'Cannot play supporters, stadiums or trainers';\n        const noSupporter = 'Cannot play supporters';\n        const noRestrictions = 'Can play any trainer card';\n        return getRuleText({\n            ex: noSupporter, dp: nothing, hgss: nothing, bw: noRestrictions, xy: noRestrictions, sm: noRestrictions, swsh: noSupporter\n        });\n    }\n\n    const fossilRule = () => {\n        const fossilAsBasic = 'Fossils are treated as Basic Pokémon during set-up';\n        const fossilAsTrainer = 'Fossils are not treated as Basic Pokémon during set-up';\n        return getRuleText({\n            ex: fossilAsBasic, dp: fossilAsBasic, hgss: fossilAsBasic, bw: fossilAsBasic, xy: fossilAsTrainer, sm: fossilAsTrainer, swsh: fossilAsTrainer\n        });\n    }\n\n    return (\n        <div className='rules card'>\n            <h2>{formatName()}</h2>\n            <ul>\n            <li>{flipRule()}</li>\n            <li>{drawRule()}</li>\n            <li>{trainerRule()}</li>\n            <li>{fossilRule()}</li>\n            </ul>\n        </div>\n    )\n}\n\nexport default RuleText;","import React, { useState } from 'react';\nimport Button from '../../common/button';\nimport './rules.scss'\nimport RuleText from './ruletext';\n\nconst Rules = () => {\n    const [format, setFormat] = useState('');\n    const formats = ['WotC', 'EX', 'DP', 'HGSS', 'BW', 'XY', 'SM', 'SWSH'];\n\n    return (\n        <div className='rules card'>\n            <h1>Rules</h1>\n            <div>\n                {formats.map(f =>\n                    <Button key={f} title={f} onClick={() => setFormat(f)} />\n                )}\n            </div>\n            <RuleText format={format} />\n        </div>\n    );\n}\n\nexport default Rules;","import * as hgss from './lists/hgss';\nimport * as dp from './lists/dp';\nimport * as bw from './lists/bw';\nimport * as xy from './lists/xy';\n\nexport const formatDeck = (deck) => {\n    return { name: getDeckName(deck), list: getDeckList(deck) }\n}\n\nexport const getDeckName = (deck) => {\n    return deck.split('\\n').shift().trim();\n}\n\nexport const getDeckList = (deck) => {\n    return deck\n        .split('\\n')\n        .slice(1)\n        .map(string => string.split(/[\\,\\t]/))\n        .map(row => ({\n            amount: row[0].trim(),\n            name: row[1].trim(),\n            image: \"\"\n        }));\n}\n\nexport const getDecks = (format) => {\n    switch (format) {\n        case 'DP': return [\n            dp.luxchomp,\n            dp.dialgachomp,\n            dp.spreadSp,\n            dp.gardevoir,\n            dp.beedrill,\n            dp.gengar,\n            dp.flygon,\n            dp.cradily,\n            dp.gyarados,\n            dp.yanmega,\n        ];\n        case 'HGSS': return [\n            hgss.metagross,\n            hgss.lanturn,\n            hgss.meganium,\n            hgss.gengar,\n            hgss.yanmega,\n            hgss.blastoise,\n            hgss.typhlosion,\n            hgss.umbreon,\n        ];\n        case 'BW': return [\n            bw.rayeels,\n            bw.sablegarb,\n            bw.blastoise,\n            bw.klinklang,\n            bw.toolDrop,\n            bw.plasma,\n            bw.zebstrika,\n            bw.flygon,\n            bw.garchomp,\n        ];\n        case 'XY': return [\n            xy.megaman,\n            xy.volcanion,\n            xy.nightMarch,\n            xy.vespiFriends,\n            xy.vespiBats,\n            xy.yveltal,\n            xy.tyrantrum,\n            xy.sceptile,\n            xy.waterbox,\n            xy.greninja,\n            xy.altaria,\n            xy.toadTina,\n        ];\n        default: return [];\n    }\n}","import React, { useEffect, useState } from 'react';\nimport Button from '../../common/button'\nimport * as deckUtils from './deckutils';\n\nconst Decklist = ({ format }) => {\n    const emptyDecklist = { name: '', list: [] };\n    const [decks, setDecks] = useState([]);\n    const [decklist, setDecklist] = useState(emptyDecklist);\n\n    useEffect(() => {\n        setDecks(\n            deckUtils.getDecks(format).map(deckUtils.formatDeck)\n        );\n        setDecklist(emptyDecklist)\n    }, [format]);\n\n    const Card = ({ amount, name }) => <div>{`${amount} - ${name}`}</div>;\n\n    return (\n        <div>\n            <h2>{format}</h2>\n            {decks.map(deck => <Button title={deck.name} onClick={() => setDecklist(deck)} />)}\n            {decklist.list.map(row => <Card amount={row.amount} name={row.name} />)}\n        </div>\n    )\n}\n\nexport default Decklist;","export const beedrill = `Beedrill\n2\tBeedrill\n2\tBeedrill\n4\tKakuna\n4\tWeedle\n3\tClaydol\n3\tBaltoy\n1\tUxie\n4\tRoseanne's Research\n4\tBebe's Search\n3\tCynthia's Feelings\n4\tQuick Ball\n4\tPoke Drawer +\n4\tNight Maintenance\n3\tPlus Power\n2\tWarp Point\n1\tLuxury Ball\n2\tExpert Belt\n4\tBroken Time Space\n4\tGrass\n2\tMulti Energy`\n\nexport const luxchomp = `Luxchomp\t\n2\tLuxray GL lv.X\n2\tLuxray GL\n2\tGarchomp C lv.X\n2\tGarchomp C\n2\tUxie\n1\tAzelf\n1\tUnown G\n1\tUnown Q\n1\tCrobat G\n1\tAmbipom G\n1\tToxicroak G\n1\tLucario GL\n1\tBronzong G\n4\tRoseanne's Research\n4\tCyrus's Conspiracy\n2\tCynthia's Feelings\n1\tBebe's Search\n1\tAaron's Collection\n4\tPoke Turn\n4\tPower Spray\n3\tSP Radar\n1\tLuxury Ball\n1\tVS Seeker\n4\tEnergy Gain\n4\tCall Energy\n3\tSP Energy\n4\tLightning\n2\tPsychic`\n\nexport const gyarados = `Gyarados\t\n4\tGyarados\n4\tMagikarp\n4\tSableye\n2\tCrobat G\n2\tUxie\n1\tAzelf\n1\tRegice\n1\tCombee\n1\tUnown Q\n4\tFelicity's Drawing\n4\tVolkner's Philosophy\n4\tRoseanne's Research\n3\tBebe's Search\n4\tSuper Scoop Up\n4\tPokemon Rescue\n3\tPoke Turn\n3\tPlus Power\n2\tLuxury Ball\n3\tBrokern Time Space\n2\tExpert Belt\n2\tCyclone Energy\n2\tDarkness Energy`\n\nexport const cradily = `Cradily\t\n4\tCradily\n2\tLileep\n4\tSableye\n2\tCherim\n2\tCherubi\n1\tClaydol\n1\tBaltoy\n1\tRegice\n1\tUxie\n1\tCrobat G\n4\tBuck's Training\n3\tProfessor Rowan\n3\tVolkner's Philosophy\n3\tBebe's Search\n2\tRoseanne's Research\n2\tFossil Excavator\n4\tRoot Fossil\n4\tRare Candy\n4\tPlus Power\n1\tLuxury Ball\n2\tExpert Belt\n9\tGrass`\n\nexport const spreadSp = `Spread SP\t\n2\tGallade 4 lv.X\n2\tGallade 4\n1\tInfernape 4 lv.X\n2\tInfernape 4\n2\tCrobat G\n1\tHonchkrow G\n1\tBronzong G\n1\tAmpbipom G\n1\tForretress G\n1\tElectrode G\n1\tSpiritomb\n1\tUnown Q\n1\tUxie\n4\tRoseanne's Research\n4\tCyrus's Conspiracy\n1\tBebe's Search\n1\tAaron's Collection\n4\tSP Radar\n4\tPoke Turn\n4\tSuper Scoop Up\n3\tPower Spray\n1\tVS Seeker\n1\tPremier Ball\n1\tLuxury Ball\n4\tEnergy Gain\n4\tSP Energy\n4\tFire\n3\tPsychic`\n\nexport const dialgachomp = `Dialgachomp\t\n2\tGarchomp C lv.X\n2\tGarchomp C\n1\tDialga G lv.X\n2\tDialga G\n1\tUxie lv.X\n2\tUxie\n2\tCrobat G\n1\tBronzong G\n1\tAmbipom G\n1\tToxicroak G\n1\tAzelf\n1\tUnown G\n1\tUnown Q\n4\tCyrus's Conspiracy\n4\tRoseanne's Research\n1\tLooker's Investigation\n1\tAaron's Collection\n1\tBebe's Search\n4\tPoke Turn\n4\tPower Spray\n3\tSP Radar\n1\tVS Seeker\n1\tLuxury Ball\n4\tEnergy Gain\n1\tExpert Belt\n4\tCall Energy\n4\tMetal Energy\n1\tWarp Energy\n3\tPsychic\n1\tMetal`\n\nexport const flygon = `Flygon\t\n1\tFlygon lv.X\n3\tFlygon\n3\tVibrava\n3\tTrapinch\n2\tPalkia lv.X\n2\tPalkia\n2\tMachamp\n2\tMachoke\n2\tMachop\n2\tClaydol\n2\tBaltoy\n4\tSpiritomb\n1\tAzelf\n1\tUnown Q\n4\tRoseanne's Research\n4\tBebe's Search\n3\tCynthia's Feelings\n1\tNight Maintenance\n1\tPremier Ball\n1\tLuxury Ball\n2\tMemory Berry\n4\tCall Energy\n5\tFighting\n3\tWater\n1\tDark`\n\nexport const yanmega = `Yanmega\t\n4\tYanmega\n4\tYanma\n1\tLeafeon lv.X\n3\tLeafeon\n3\tEevee\n1\tShaymin lv.X\n1\tShaymin\n1\tClaydol\n1\tBaltoy\n1\tUxie\n4\tBebe's Search\n4\tFelicity's Drawing\n4\tVolkner's Philosophy\n3\tWarp Point\n3\tSwitch\n2\tVS Seeker\n1\tPremier Ball\n1\tLuxury Ball\n2\tExpert belt\n3\tBroken Time Space\n13\tGrass`\n\nexport const gengar = `Gengar\t\n1\tGengar lv.X\n2\tGengar\n1\tGengar\n4\tHaunter\n4\tGastly\n4\tSpiritomb\n2\tClaydol\n2\tBaltoy\n1\tBlissey\n1\tChansey\n1\tRelicanth\n1\tUxie\n1\tAzelf\n1\tUnown Q\n1\tUnown G\n4\tRoseanne's Research\n4\tBebe's Search\n3\tCynthia's feelings\n2\tLooker's Investigation\n1\tSwitch\n1\tNight Maintenance\n1\tLuxury Ball\n1\tExpert Belt\n3\tBroken Time-Space\n4\tCall Energy\n1\tRainbow Energy\n1\tFighting\n7\tPsychic`\n\nexport const gardevoir = `Gardevoir\t\n3\tGardevoir\n2\tGallade\n4\tKirlia\n4\tRalts\n4\tSpiritomb\n2\tClaydol\n2\tBaltoy\n1\tDusknoir\n1\tDusklops\n1\tDuskull\n1\tRelicanth\n1\tCrobat G\n1\tUnown Q\n4\tRoseanne's Research\n4\tBebe's Search\n3\tTeam Galactic's Wager\n1\tLucian's Assignment\n1\tSwitch\n1\tPoke Turn\n1\tLuxury Ball\n1\tNight Maintenance\n2\tBroken Time Space\n4\tCall Energy\n4\tUpper Energy\n1\tRainbow Energy\n5\tPsychic\n1\tFighting`","export const metagross = `Metagross\n4,Metagross\n3,Metang\n4,Beldum\n2,Mismagius\n2,Misdreavus\n2,Jirachi\n1,Kingdra Prime\n1,Horsea\n2,Cleffa\n1,Elekid\n4,Pokemon Collector\n4,Engineer's Adjustments\n4,Copycat\n3,Twins\n4,Pokemon Communication\n3,Rare Candy\n2,Junk Arm\n1,Pokemon Circulator\n1,Super Scoop Up\n12,Psychic`\n\nexport const lanturn = `Lanturn Feraligatr\n3,Feraligatr Prime\n2,Croconaw\n3,Totodile\n3,Lanturn Prime\n3,Chinchou\n1,Magnezone Prime\n1,Magnemite\n1,Tyrogue\n2,Cleffa\n4,Professor Oak's New Theory\n4,Pokemon Collector\n3,Professor Elm's Training Method\n2,Engineer's Adjustments\n2,Fisherman\n4,Pokemon Communication\n3,Rare Candy\n2,Pokemon Reversal\n1,Burned Tower\n1,Double Colorless Energy\n11,Water\n4,Lightning`\n\nexport const meganium = `Meganium\n3\tMeganium Prime\n3\tBayleef\n3\tChicorita\n2\tRoserade\n2\tRoselia\n2\tBlissey Prime\n2\tChansey\n1\tCelebi Prime\n1\tSmeargle\n1\tCleffa\n4\tPokemon Collector\n4\tProfessor Oak's New Theory\n4\tProfessor Elm's Training Method\n1\tTwins\n1\tSeeker\n1\tFlower Shop Lady\n4\tPokemon Communication\n4\tPokegear\n1\tSwitch\n1\tPlusPower\n4\tRainbow Energy\n1\tDouble Colorless Energy\n10\tGrass`\n\nexport const gengar = `Gengar\n4\tGengar Prime\n2\tHaunter\n4\tGastly\n2\tSpiritomb\n1\tVileplume\n1\tOddish\n1\tShaymin\n1\tSmeargle\n1\tMr.Mime\n1\tJirachi\n1\tMime Jr.\n1\tCleffa\n4\tPokemon Collector\n4\tProfessor Oak's New Theory\n4\tTwins\n4\tSeeker\n4\tPokemon Communication\n4\tRare Candy\n2\tLost World\n2\tRescue Energy\n12\tPsychic`\n\nexport const yanmega = `Yanmega\n4\tYanmega Prime\n4\tYanma\n2\tVileplume\n1\tBellossom\n2\tGloom\n3\tOddish\n2\tUrsaring Prime\n3\tTeddiursa\n2\tSunflora\n2\tSunkern\n1\tDonphan Prime\n1\tPhanpy\n1\tRoserade\n1\tRoselia\n4\tPokemon Collector\n4\tCopycat\n4\tJudge\n3\tProfessor Oak's New Theory\n4\tPokemon Communication\n4\tDouble Colorless Energy\n4\tRainbow Energy\n4\tGrass`\n\nexport const blastoise = `Blastoise\n4\tBlastoise\n2\tWartortle\n4\tSquirtle\n4\tBuizel\n3\tFloatzel\n1\tKingdra Prime\n1\tHorsea\n1\tSmeargle\n1\tPichu\n1\tTyrogue\n1\tCleffa\n4\tPokemon Collector\n4\tCopycat\n4\tProfessor Oak's New Theory\n1\tFlower Shop Lady\n4\tPokemon Communication\n4\tRare Candy\n2\tSwitch\n4\tDouble Colorless Energy\n10\tWater`\n\nexport const typhlosion = `Typhlosion\n4\tTyplosion Prime\n2\tQuilava\n4\tCindaquil\n4\tMagmortar\n4\tMagmar\n2\tNinetales\n2\tVulpix\n1\tPichu\n1\tCleffa\n4\tPokemon Collector\n4\tTwins\n3\tSage's Training\n2\tFlower Shop Lady\n4\tPokemon Communication\n3\tRare Candy\n2\tBurned Tower\n14\tFire`\n\nexport const umbreon = `Umbreon\n3\tUmbreon\n4\tEevee\n3\tCrobat Prime\n1\tGolbat\n3\tZubat\n1\tKingra Prime\n1\tHorsea\n2\tCleffa\n1\tTyrogue\n1\tSmeargle\n4\tPokemon Collector\n4\tProfessor Oak's New Theory\n2\tSage's Training\n2\tCopycat\n2\tTwins\n1\tFlower Shop Lady\n4\tPokemon Communication\n3\tRare Candy\n3\tJunk Arm\n2\tSwitch\n1\tEnergy Exchanger\n4\tRainbow Energy\n4\tDarkness Energy\n2\tPsychic\n2\tDark`","export const rayeels = `Rayeels\t\n3\tRayquazaEX\n4\tEelektrik\n4\tTynamo\n2\tKeldeoEX\n1\tRaikouEX\n1\tZekrom\n1\tRayquazaEX\n4\tN\n4\tProfessor Juniper\n3\tColress\n2\tSkyla\n4\tUltra Ball\n3\tLevel Ball\n3\tPokemon Catcher\n1\tMax Potion\n1\tTool Scrapper\n1\tSuper Rod\n1\tDowsing machine\n3\tFloat Stone\n10\tLightning\n4\tFire`;\n\nexport const sablegarb = `Sablegarb\t\n4\tSableye\n2\tGarbodor\n3\tTrubbish\n4\tProfessor Juniper\n4\tSkyla\n4\tN\n4\tLevel Ball\n4\tCrushing Hammer\n3\tRandom Receiver\n3\tPokemon Catcher\n2\tUltra Ball\n2\tEnhanced Hammer\n2\tRecycle\n2\tSuper Rod\n1\tTool Scrapper\n1\tEnergy Retrieval\n1\tEnergy Search\n1\tBicycle\n1\tHypnotoxic Laser\n3\tFloat Stone\n1\tSilver Mirror\n1\tRescue Scarf\n1\tLife Dew\n6\tDark`;\n\nexport const blastoise = `Blastoise\t\n3\tBlastoise\n1\tWartortle\n3\tSquirtle\n2\tBlack KyuremEX\n2\tKeldeoEX\n1\tKeldeo\n1\tJirachiEX\n1\tExeggcute\n3\tN\n3\tSkyla\n2\tProfessor Juniper\n1\tColress\n4\tRare Candy\n4\tSuperior Energy Retrieval\n3\tUltra Ball\n2\tLevel Ball\n2\tPokemon Catcher\n2\tTool Scrapper\n1\tEnergy Search\n1\tHeavy Ball\n1\tComputer Search\n4\tTropical Beach\n10\tWater\n3\tLightning`;\n\nexport const klinklang = `Klinklang\t\n2\tKlinklang\n2\tKlinklang\n2\tKlang\n4\tKlink\n2\tDarkraiEX\n1\tSableye\n1\tRegisteelEX\n1\tCobalionEX\n1\tKeldeoEX\n1\tJirachiEX\n4\tN\n4\tSkyla\n2\tProfessor Juniper\n2\tColress\n4\tUltra Ball\n3\tRare Candy\n2\tPokemon Catcher\n2\tHeavy Ball\n2\tMax Potion\n1\tTool Scrapper\n1\tSuper Rod\n1\tComputer Search\n3\tTropical Beach\n4\tPrism Energy\n8\tMetal`;\n\nexport const toolDrop = `Tool Drop\t\n4\tTrubbish\n4\tSigilyph\n1\tElectrode\n1\tVoltorb\n1\tMasquerain\n1\tSurskit\n4\tProfessor Juniper\n4\tN\n2\tColress\n1\tElesa\n4\tLevel Ball\n4\tPokemon Catcher\n1\tRevive\n1\tSuper Rod\n1\tDowsing Machine\n4\tFloat Stone\n4\tExp Share\n3\tEviolite\n3\tSilver Bangle\n2\tSilver Mirror\n10\tPsychic`;\n\nexport const plasma = `Plasma\t\n4\tDeoxysEX\n3\tKyurem\n2\tThundurusEX\n1\tLugiaEX\n1\tAbsol\n1\tKeldeoEX\n4\tN\n4\tProfessor Juniper\n3\tColress\n1\tSkyla\n4\tHypnotoxic Laser\n4\tPokemon Catcher\n3\tTeam Plasma Ball\n3\tColress Machine\n2\tUltra Ball\n1\tTool Scrapper\n1\tDowsing Machine\n3\tFloat Stone\n2\tVirbank City Gym\n4\tPlasma Energy\n4\tPrism Energy\n1\tDouble Colorless Energy\n2\tLightning\n2\tWater`;\n\nexport const zebstrika = `Zebstrika\t\n4\tZebstrika\n4\tBlitzle\n2\tGarbodor\n1\tTrubbish\n1\tJirachiEX\n4\tProfessor Juniper\n4\tN\n1\tGhetsis\n1\tElesa\n4\tLevel Ball\n4\tHypnotoxic Laser\n2\tPokemon Catcher\n1\tTool Scrapper\n1\tEnhanced Hammer\n1\tUltra Ball\n1\tSuper Rod\n2\tSilver Bangle\n1\tFloat Stone\n1\tExp. Share\n1\tGiant Cape\n1\tSilver Mirror\n1\tRock Guard\n3\tVirbank City\n4\tPrism Energy\n10\tLightning`;\n\nexport const flygon = `Flygon\t\n4\tFlygon\n1\tVibrava\n4\tTrapinch\n3\tAccelgor\n3\tShelmet\n1\tDusknoir\n1\tDuskull\n1\tMusharna\n1\tMunna\n1\tMewEX\n1\tKeldeoEX\n4\tSkyla\n4\tN\n2\tProfessor Juniper\n2\tColress\n4\tRare Candy\n3\tLevel Ball\n3\tUltra Ball\n2\tPokemon Catcher\n1\tPokemon Communication\n1\tTool Scrapper\n1\tComputer Search\n3\tFloat Stone\n1\tSilver Bangle\n4\tTropical Beach\n4\tDouble Colorless Energy`;\n\nexport const garchomp = `Garchomp\t\n4\tGarchomp\n3\tGabite\n4\tGible\n4\tAltaria\n4\tSwablu\n4\tN\n4\tColress\n3\tSkyla\n3\tProfessor Juniper\n4\tLevel Ball\n2\tPokemon Catcher\n2\tRare Candy\n2\tSuper Rod\n1\tSwitch\n1\tTool Scrapper\n1\tScoop Up Cyclone\n2\tSilver Bangle\n3\tBlend Energy [W][L][F][M]\n7\tFighting\n2\tWater`;\n","export const megaman = `Megaman\t\n4\tManectricEX\n3\tMManectricEX\n2\tArticuno\n1\tRegice\n1\tRaikou\n1\tHoopaEX\n1\tShayminEX\n4\tProfessor Sycamore\n2\tN\n2\tLysandre\n1\tHex Maniac\n1\tAZ\n1\tGiovanni's Scheme\n4\tUltra ball\n4\tTrainers' Mail\n4\tVS Seeker\n2\tBattle Compressor\n1\tSwitch\n1\tProfessor's Letter\n1\tEnhanced Hammer\n4\tManectric Spirit Link\n1\tMuscle Band\n4\tRough Seas\n7\tLightning\n3\tWater`;\n\nexport const volcanion = `Volcanion\t\n4\tVolcanion\n4\tVolcanionEX\n1\tStaryu\n1\tStarmie\n1\tShayminEX\n4\tProfessor Sycamore\n2\tN\n2\tLysandre\n1\tFisherman\n1\tOlympia\n1\tBlacksmith\n4\tUltra Ball\n4\tMax Elixir\n4\tVS Seeker\n1\tEscape Rope\n1\tProfessor's Letter\n1\tStartling Megaphone\n3\tFighting Fury Belt\n3\tFloat Stone\n3\tScorched Earth\n14\tFire`;\n\nexport const nightMarch = `Night March\t\n4\tJoltik\n4\tPumpkaboo\n4\tLampent\n2\tMew\n2\tShayminEX\n3\tProfessor Sycamore\n2\tLysandre\n2\tHex Maniac\n1\tN\n1\tAZ\n1\tPokemon Ranger\n1\tTeammates\n4\tUltra Ball\n4\tVS Seeker\n4\tTrainers' Mail\n4\tBattle Compressor\n4\tPuzzle of Time\n1\tEnhanced Hammer\n1\tStartling Megaphone\n1\tEscape Rope\n1\tSpecial Charge\n2\tFighting Fury Belt\n2\tDimension Valley\n1\tParallel City\n4\tDouble Colorless Energy`;\n\nexport const vespiFriends = `Vespi & Friends\t\n4\tCombee\n4\tVespiquen\n4\tUnown\n3\tKlefki\n2\tPikachu\n2\tRaichu\n2\tZorua\n2\tZoroark\n2\tEevee\n1\tFlareon\n1\tVaporeon\n1\tShayminEX\n4\tProfessor Sycamore\n2\tN\n2\tLysandre\n1\tPokemon Ranger\n1\tHex Maniac\n4\tVS Seeker\n4\tUltra Ball\n3\tAcro Bike\n2\tSpecial Charge\n1\tRevitalizer\n1\tBuddy-Buddy Rescue\n2\tFloat Stone\n1\tForest of Giant Plants\n4\tDouble Colorless Energy`;\n\nexport const yveltal = `Yveltal\t\n2\tYveltalEX\n2\tYveltal\n2\tYveltal\n1\tYveltal Break\n1\tDarkraiEX\n2\tGarbodor\n2\tTrubbish\n2\tShayminEX\n4\tProfessor Sycamore\n4\tN\n2\tLysandre\n1\tDelinquent\n4\tUltra Ball\n4\tMax Elixir\n4\tVS Seeker\n3\tTrainers' Mail\n3\tFloat Stone\n2\tFighting Fury Belt\n2\tParallel City\n4\tDouble Colorless Energy\n9\tDark`;\n\nexport const tyrantrum = `Tyrantrum\t\n3\tBronzong\n3\tBronzor\n1\tBronzong Break\n2\tZoroark\n2\tZorua\n2\tTyrantrumEX\n1\tGiratinaEX\n1\tAegislashEX\n1\tGenesectEX\n1\tMagearnaEX\n1\tCobalion\n1\tSmeargle\n2\tShayminEX\n4\tProfessor Sycamore\n2\tN\n2\tLysandre\n1\tAZ\n4\tUltra Ball\n4\tVS Seeker\n1\tSacred Ash\n1\tSpecial Charge\n1\tEscape Rope\n2\tFloat Stone\n2\tMuscle Band\n2\tSky Field\n4\tDouble Dragon Energy\n7\tMetal\n2\tFighting`;\n\nexport const sceptile = `Sceptile\t\n4\tSceptileEX\n4\tMSceptileEX\n1\tAriados\n1\tSpinarak\n1\tHoopaEX\n4\tProfessor Sycamore\n3\tSteven\n2\tN\n2\tSkyla\n1\tPokemon Ranger\n1\tDelinquent\n1\tGiovanni's Scheme\n1\tPokemon Center Lady\n1\tLysandre\n1\tFisherman\n4\tUltra Ball\n4\tVS Seeker\n2\tMega Turbo\n1\tRepeat Ball\n1\tEvosoda\n1\tProfessor's Letter\n1\tEnergy Retrieval\n1\tRevitalizer\n4\tSceptile Spirit Link\n3\tSilent Lab\n10\tGrass`;\n\nexport const waterbox = `Waterbox\t\n3\tSeismitoadEX\n2\tManaphyEX\n1\tGlaceonEX\n1\tRegice\n1\tArticuno\n2\tShayminEX\n1\tHoopaEX\n4\tProfessor Sycamore\n3\tN\n2\tDelinquent\n1\tLysandre\n1\tPokemon Center Lady\n1\tAZ\n1\tTeam Flare Grunt\n1\tHex Maniac\n4\tUltra Ball\n4\tVS Seeker\n4\tMax Elixir\n3\tEnergy Switch\n1\tStartling Megaphone\n3\tFighting Fury Belt\n3\tRough Seas\n1\tParallel City\n12\tWater`;\n\nexport const greninja = `Greninja\t\n3\tGreninja Break\n3\tGreninja\n1\tGreninja\n4\tFrogadier\n3\tFroakie\n4\tTalonflame\n1\tOctillery\n1\tRemoraid\n4\tProfessor Sycamore\n4\tN\n1\tLysandre\n1\tFisherman\n4\tDive Ball\n4\tTrainers Mail\n3\tVS Seeker\n2\tSuper Rod\n2\tUltra Ball\n2\tFloat Stone\n3\tRough Seas\n2\tSplash Energy\n8\tWater`;\n\nexport const altaria = `Altaria\t\n3\tMAltariaEX\n4\tAltariaEX\n4\tJynx\n1\tShayminEX\n4\tProfessor Sycamore\n3\tN\n2\tLysandre\n1\tHex Maniac\n1\tOlympia\n4\tUltra Ball\n4\tVS Seeker\n4\tFairy Drop\n3\tMega Turbo\n1\tEscape Rope\n1\tStartling Megaphone\n1\tSpecial Charge\n4\tAltaria Spirit Link\n3\tFairy Garden\n4\tDouble Colorless Energy\n1\tWonder Energy\n7\tFairy`;\n\nexport const vespiBats = `Vespi Bats\t\n4\tVespiquen\n4\tCombee\n4\tYveltal\n3\tCrobat\n3\tGolbat\n4\tZubat\n1\tShaymin\n4\tProfessor Sycamore\n1\tN\n1\tLysandre\n1\tTeammates\n1\tHex Maniac\n1\tAZ\n4\tUltra Ball\n4\tTrainers' Mail\n4\tVS Seeker\n3\tBattle Compressor\n2\tMuscle Band\n1\tParallel City\n4\tDouble Colorless Energy\n6\tDark`;\n\nexport const toadTina = `Toad Tina\t\n3\tSeismitoadEX\n2\tGiratinaEX\n1\tLatiosEX\n2\tShayminEX\n3\tProfessor Sycamore\n2\tLysandre\n1\tN\n1\tSkyla\n1\tGiovanni's Scheme\n1\tXerosic\n1\tAZ\n1\tHex Maniac\n1\tTeam Flare Grunt\n4\tTrainers' Mail\n4\tVS Seeker\n4\tSuper Scoop Up\n4\tPuzzle of Time\n4\tCrushing Hammer\n3\tUltra Ball\n2\tHead Ringer\n2\tFighting Fury Belt\n2\tFloat Stone\n1\tMuscle Band\n1\tSilent Lab\n1\tTeam Aqua's Secret Base\n4\tDouble Dragon Energy\n4\tDouble Colorless Energy`;\n\n","import React, { useState } from \"react\";\nimport Button from \"../../common/button\";\nimport Decklist from \"./decklist\";\n\nconst Decklists = () => {\n    const [format, setFormat] = useState('');\n    const formats = ['DP', 'HGSS', 'BW', 'XY'];\n\n    return (\n        <div className=\"decklists card\">\n            <h1>Decklists</h1>\n            <div>\n                {formats.map(f => <Button key={f} title={f} onClick={() => setFormat(f)} />)}\n            </div>\n            <Decklist format={format} />\n        </div>\n    );\n}\n\nexport default Decklists;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from './pages/home';\nimport WizardChallenge from './pages/wizard/wizard';\nimport MagicBabies from './pages/magicbabies/magicbabies';\nimport Rules from './pages/rules/rules';\nimport 'bootstrap';\nimport './index.scss';\nimport Button from './common/button';\nimport Decklists from './pages/decklists/decklists';\n\nconst HomeTab = () =>\n  <Link className='home-tab m-1' to=\"/pkmn/\">\n    <img src='images/favicon.ico' alt='home' />\n  </Link>\n\nconst HeaderTab = ({ title, path }) =>\n  <Link className='header-tab' to={\"/pkmn/\" + path}>\n    {<Button title={title} />}\n  </Link>;\n\nconst Header = () =>\n  <div className='header'>\n    <HomeTab />\n    <HeaderTab title='Wizard' path='wizard' />\n    <HeaderTab title='Magic Babies' path='magicbabies' />\n    <HeaderTab title='Decklists' path='decklists' />\n    <HeaderTab title='Rules' path='rules' />\n  </div>;\n\nconst App = () =>\n  <Router>\n    <div>\n      <Header />\n      <Switch>\n        <Route exact path=\"/pkmn\">\n          <Home />\n        </Route>\n        <Route path=\"/pkmn/wizard\">\n          <WizardChallenge />\n        </Route>\n        <Route path=\"/pkmn/magicbabies\">\n          <MagicBabies />\n        </Route>\n        <Route path = \"/pkmn/decklists\">\n          <Decklists />\n          </Route>\n        <Route path=\"/pkmn/rules\">\n          <Rules />\n        </Route>\n      </Switch>\n    </div>\n  </Router>;\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}